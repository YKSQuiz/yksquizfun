{"version":3,"file":"static/js/154.0ff8f74f.chunk.js","mappings":"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","sources":["../node_modules/canvas-confetti/dist/confetti.module.mjs","components/quiz/Quiz.tsx","utils/performance.ts"],"sourcesContent":["// canvas-confetti v1.9.3 built on 2024-04-30T22:19:17.794Z\nvar module = {};\n\n// source content\n/* globals Map */\n\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  var canUsePaths = typeof Path2D === 'function' && typeof DOMMatrix === 'function';\n  var canDrawBitmap = (function () {\n    // this mostly supports ssr\n    if (!global.OffscreenCanvas) {\n      return false;\n    }\n\n    var canvas = new OffscreenCanvas(1, 1);\n    var ctx = canvas.getContext('2d');\n    ctx.fillRect(0, 0, 1, 1);\n    var bitmap = canvas.transferToImageBitmap();\n\n    try {\n      ctx.createPattern(bitmap, 'no-repeat');\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  })();\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var bitmapMapper = (function (skipTransform, map) {\n    // see https://github.com/catdad/canvas-confetti/issues/209\n    // creating canvases is actually pretty expensive, so we should create a\n    // 1:1 map for bitmap:canvas, so that we can animate the confetti in\n    // a performant manner, but also not store them forever so that we don't\n    // have a memory leak\n    return {\n      transform: function(bitmap) {\n        if (skipTransform) {\n          return bitmap;\n        }\n\n        if (map.has(bitmap)) {\n          return map.get(bitmap);\n        }\n\n        var canvas = new OffscreenCanvas(bitmap.width, bitmap.height);\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(bitmap, 0, 0);\n\n        map.set(bitmap, canvas);\n\n        return canvas;\n      },\n      clear: function () {\n        map.clear();\n      }\n    };\n  })(canDrawBitmap, new Map());\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n\n            bitmapMapper.clear();\n\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI && CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('🎊 Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    drift: 0,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function colorsToRgb(colors) {\n    return colors.map(hexToRgb);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      wobbleSpeed: Math.min(0.11, Math.random() * 0.1 + 0.05),\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: (Math.random() * (0.75 - 0.25) + 0.25) * Math.PI,\n      color: opts.color,\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      drift: opts.drift,\n      random: Math.random() + 2,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar,\n      flat: opts.flat\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity + fetti.drift;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.velocity *= fetti.decay;\n\n    if (fetti.flat) {\n      fetti.wobble = 0;\n      fetti.wobbleX = fetti.x + (10 * fetti.scalar);\n      fetti.wobbleY = fetti.y + (10 * fetti.scalar);\n\n      fetti.tiltSin = 0;\n      fetti.tiltCos = 0;\n      fetti.random = 1;\n    } else {\n      fetti.wobble += fetti.wobbleSpeed;\n      fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n      fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n      fetti.tiltAngle += 0.1;\n      fetti.tiltSin = Math.sin(fetti.tiltAngle);\n      fetti.tiltCos = Math.cos(fetti.tiltAngle);\n      fetti.random = Math.random() + 2;\n    }\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n\n    context.beginPath();\n\n    if (canUsePaths && fetti.shape.type === 'path' && typeof fetti.shape.path === 'string' && Array.isArray(fetti.shape.matrix)) {\n      context.fill(transformPath2D(\n        fetti.shape.path,\n        fetti.shape.matrix,\n        fetti.x,\n        fetti.y,\n        Math.abs(x2 - x1) * 0.1,\n        Math.abs(y2 - y1) * 0.1,\n        Math.PI / 10 * fetti.wobble\n      ));\n    } else if (fetti.shape.type === 'bitmap') {\n      var rotation = Math.PI / 10 * fetti.wobble;\n      var scaleX = Math.abs(x2 - x1) * 0.1;\n      var scaleY = Math.abs(y2 - y1) * 0.1;\n      var width = fetti.shape.bitmap.width * fetti.scalar;\n      var height = fetti.shape.bitmap.height * fetti.scalar;\n\n      var matrix = new DOMMatrix([\n        Math.cos(rotation) * scaleX,\n        Math.sin(rotation) * scaleX,\n        -Math.sin(rotation) * scaleY,\n        Math.cos(rotation) * scaleY,\n        fetti.x,\n        fetti.y\n      ]);\n\n      // apply the transform matrix from the confetti shape\n      matrix.multiplySelf(new DOMMatrix(fetti.shape.matrix));\n\n      var pattern = context.createPattern(bitmapMapper.transform(fetti.shape.bitmap), 'no-repeat');\n      pattern.setTransform(matrix);\n\n      context.globalAlpha = (1 - progress);\n      context.fillStyle = pattern;\n      context.fillRect(\n        fetti.x - (width / 2),\n        fetti.y - (height / 2),\n        width,\n        height\n      );\n      context.globalAlpha = 1;\n    } else if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else if (fetti.shape === 'star') {\n      var rot = Math.PI / 2 * 3;\n      var innerRadius = 4 * fetti.scalar;\n      var outerRadius = 8 * fetti.scalar;\n      var x = fetti.x;\n      var y = fetti.y;\n      var spikes = 5;\n      var step = Math.PI / spikes;\n\n      while (spikes--) {\n        x = fetti.x + Math.cos(rot) * outerRadius;\n        y = fetti.y + Math.sin(rot) * outerRadius;\n        context.lineTo(x, y);\n        rot += step;\n\n        x = fetti.x + Math.cos(rot) * innerRadius;\n        y = fetti.y + Math.sin(rot) * innerRadius;\n        context.lineTo(x, y);\n        rot += step;\n      }\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n        bitmapMapper.clear();\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var hasResizeEventRegistered = false;\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var drift = prop(options, 'drift', Number);\n      var colors = prop(options, 'colors', colorsToRgb);\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var flat = !!prop(options, 'flat');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            drift: drift,\n            scalar: scalar,\n            flat: flat\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          hasResizeEventRegistered = false;\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          if (document.body.contains(canvas)) {\n            document.body.removeChild(canvas); \n          }\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize && !hasResizeEventRegistered) {\n        hasResizeEventRegistered = true;\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  // Make default export lazy to defer worker creation until called.\n  var defaultFire;\n  function getDefaultFire() {\n    if (!defaultFire) {\n      defaultFire = confettiCannon(null, { useWorker: true, resize: true });\n    }\n    return defaultFire;\n  }\n\n  function transformPath2D(pathString, pathMatrix, x, y, scaleX, scaleY, rotation) {\n    var path2d = new Path2D(pathString);\n\n    var t1 = new Path2D();\n    t1.addPath(path2d, new DOMMatrix(pathMatrix));\n\n    var t2 = new Path2D();\n    // see https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix/DOMMatrix\n    t2.addPath(t1, new DOMMatrix([\n      Math.cos(rotation) * scaleX,\n      Math.sin(rotation) * scaleX,\n      -Math.sin(rotation) * scaleY,\n      Math.cos(rotation) * scaleY,\n      x,\n      y\n    ]));\n\n    return t2;\n  }\n\n  function shapeFromPath(pathData) {\n    if (!canUsePaths) {\n      throw new Error('path confetti are not supported in this browser');\n    }\n\n    var path, matrix;\n\n    if (typeof pathData === 'string') {\n      path = pathData;\n    } else {\n      path = pathData.path;\n      matrix = pathData.matrix;\n    }\n\n    var path2d = new Path2D(path);\n    var tempCanvas = document.createElement('canvas');\n    var tempCtx = tempCanvas.getContext('2d');\n\n    if (!matrix) {\n      // attempt to figure out the width of the path, up to 1000x1000\n      var maxSize = 1000;\n      var minX = maxSize;\n      var minY = maxSize;\n      var maxX = 0;\n      var maxY = 0;\n      var width, height;\n\n      // do some line skipping... this is faster than checking\n      // every pixel and will be mostly still correct\n      for (var x = 0; x < maxSize; x += 2) {\n        for (var y = 0; y < maxSize; y += 2) {\n          if (tempCtx.isPointInPath(path2d, x, y, 'nonzero')) {\n            minX = Math.min(minX, x);\n            minY = Math.min(minY, y);\n            maxX = Math.max(maxX, x);\n            maxY = Math.max(maxY, y);\n          }\n        }\n      }\n\n      width = maxX - minX;\n      height = maxY - minY;\n\n      var maxDesiredSize = 10;\n      var scale = Math.min(maxDesiredSize/width, maxDesiredSize/height);\n\n      matrix = [\n        scale, 0, 0, scale,\n        -Math.round((width/2) + minX) * scale,\n        -Math.round((height/2) + minY) * scale\n      ];\n    }\n\n    return {\n      type: 'path',\n      path: path,\n      matrix: matrix\n    };\n  }\n\n  function shapeFromText(textData) {\n    var text,\n        scalar = 1,\n        color = '#000000',\n        // see https://nolanlawson.com/2022/04/08/the-struggle-of-using-native-emoji-on-the-web/\n        fontFamily = '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", \"EmojiOne Color\", \"Android Emoji\", \"Twemoji Mozilla\", \"system emoji\", sans-serif';\n\n    if (typeof textData === 'string') {\n      text = textData;\n    } else {\n      text = textData.text;\n      scalar = 'scalar' in textData ? textData.scalar : scalar;\n      fontFamily = 'fontFamily' in textData ? textData.fontFamily : fontFamily;\n      color = 'color' in textData ? textData.color : color;\n    }\n\n    // all other confetti are 10 pixels,\n    // so this pixel size is the de-facto 100% scale confetti\n    var fontSize = 10 * scalar;\n    var font = '' + fontSize + 'px ' + fontFamily;\n\n    var canvas = new OffscreenCanvas(fontSize, fontSize);\n    var ctx = canvas.getContext('2d');\n\n    ctx.font = font;\n    var size = ctx.measureText(text);\n    var width = Math.ceil(size.actualBoundingBoxRight + size.actualBoundingBoxLeft);\n    var height = Math.ceil(size.actualBoundingBoxAscent + size.actualBoundingBoxDescent);\n\n    var padding = 2;\n    var x = size.actualBoundingBoxLeft + padding;\n    var y = size.actualBoundingBoxAscent + padding;\n    width += padding + padding;\n    height += padding + padding;\n\n    canvas = new OffscreenCanvas(width, height);\n    ctx = canvas.getContext('2d');\n    ctx.font = font;\n    ctx.fillStyle = color;\n\n    ctx.fillText(text, x, y);\n\n    var scale = 1 / scalar;\n\n    return {\n      type: 'bitmap',\n      // TODO these probably need to be transfered for workers\n      bitmap: canvas.transferToImageBitmap(),\n      matrix: [scale, 0, 0, scale, -width * scale / 2, -height * scale / 2]\n    };\n  }\n\n  module.exports = function() {\n    return getDefaultFire().apply(this, arguments);\n  };\n  module.exports.reset = function() {\n    getDefaultFire().reset();\n  };\n  module.exports.create = confettiCannon;\n  module.exports.shapeFromPath = shapeFromPath;\n  module.exports.shapeFromText = shapeFromText;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this || {};\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n","import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { collection, query, where, getDocs, doc, updateDoc, increment } from 'firebase/firestore';\r\nimport { db } from '../../services/firebase';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { updateXpLevelRank, jokerKullan } from '../../contexts/AuthContext';\r\nimport './Quiz.css';\r\n// import { User } from '../../types/index';\r\nimport { usePerformanceMonitor } from '../../utils/performance';\r\nimport { useABTest } from '../../utils/abTesting';\r\n// import BackButton from '../common/BackButton';\r\n// import {\r\n//   TYT_SUBJECTS, AYT_SAY_SUBJECTS, AYT_EA_SUBJECTS, AYT_SOZ_SUBJECTS,\r\n//   TYT_TR_ALT_KONULAR, TYT_DIN_ALT_KONULAR, TYT_FIZIK_ALT_KONULAR, TYT_KIMYA_ALT_KONULAR, TYT_BIYOLOJI_ALT_KONULAR, TYT_COGRAFYA_ALT_KONULAR, TYT_TARIH_ALT_KONULAR,\r\n//   AYT_EDEBIYAT_ALT_KONULAR, AYT_FELSEFE_ALT_KONULAR, AYT_BIYOLOJI_ALT_KONULAR, AYT_KIMYA_ALT_KONULAR, AYT_FIZIK_ALT_KONULAR, AYT_COGRAFYA_ALT_KONULAR\r\n// } from '../../utils/constants';\r\nimport confetti from 'canvas-confetti';\r\n\r\n// Dynamic imports for heavy components\r\n// const JokerPanel = lazy(() => import(\"./JokerPanel\"));\r\n\r\n// Loading component for dynamic imports\r\n// const DynamicComponentLoader = ({ children }: { children: React.ReactNode }) => (\r\n//   <Suspense fallback={<div className=\"loading-spinner\">Yükleniyor...</div>}>\r\n//     {children}\r\n//   </Suspense>\r\n// );\r\n\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n  explanation?: string;\r\n  testNumber: number;\r\n  topicId: string;\r\n}\r\n\r\nconst JOKER_TYPES = [\"eliminate\", \"extraTime\", \"doubleAnswer\", \"autoCorrect\"] as const;\r\ntype JokerType = typeof JOKER_TYPES[number];\r\n\r\nconst JOKER_ICONS = {\r\n  eliminate: \"➗\",\r\n  extraTime: \"⏰\",\r\n  doubleAnswer: \"2️⃣\",\r\n  autoCorrect: \"✅\",\r\n};\r\n\r\n// Yardımcı fonksiyon: konu ID'sinden konu adını bul\r\n// function getSubjectNameById(subjectId: string): string {\r\n//   const allSubjects = [\r\n//     ...TYT_SUBJECTS,\r\n//     ...AYT_SAY_SUBJECTS,\r\n//     ...AYT_EA_SUBJECTS,\r\n//     ...AYT_SOZ_SUBJECTS,\r\n//     ...TYT_TR_ALT_KONULAR,\r\n//     ...TYT_DIN_ALT_KONULAR,\r\n//     ...TYT_FIZIK_ALT_KONULAR,\r\n//     ...TYT_KIMYA_ALT_KONULAR,\r\n//     ...TYT_BIYOLOJI_ALT_KONULAR,\r\n//     ...TYT_COGRAFYA_ALT_KONULAR,\r\n//     ...TYT_TARIH_ALT_KONULAR,\r\n//     ...AYT_EDEBIYAT_ALT_KONULAR,\r\n//     ...AYT_FELSEFE_ALT_KONULAR,\r\n//     ...AYT_BIYOLOJI_ALT_KONULAR,\r\n//     ...AYT_KIMYA_ALT_KONULAR,\r\n//     ...AYT_FIZIK_ALT_KONULAR,\r\n//     ...AYT_COGRAFYA_ALT_KONULAR\r\n//   ];\r\n//   const found = allSubjects.find(subj => subj.id === subjectId);\r\n//   return found ? found.label : subjectId;\r\n// }\r\n\r\nconst Quiz: React.FC = () => {\r\n  const { subTopic, testNumber } = useParams<{ subTopic: string; testNumber: string }>();\r\n  const navigate = useNavigate();\r\n  const { updateUserStats, user, updateUser, refreshUser } = useAuth();\r\n  const { measureAsync, recordMetric } = usePerformanceMonitor();\r\n  \r\n  // AB Testing\r\n  const { variant: uiVariant, config: uiConfig, trackEvent: trackUIEvent } = useABTest('quiz_ui_variant');\r\n  const { variant: loadingVariant, config: loadingConfig, trackEvent: trackLoadingEvent } = useABTest('question_loading');\r\n\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\r\n  const [timeLeft, setTimeLeft] = useState(600);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [eliminatedOptions, setEliminatedOptions] = useState<number[]>([]);\r\n  const [selectedAnswers, setSelectedAnswers] = useState<number[]>([]);\r\n  const [isDoubleAnswerActive, setIsDoubleAnswerActive] = useState(false);\r\n  // const [isAutoCorrectActive, setIsAutoCorrectActive] = useState(false);\r\n  const [showStats, setShowStats] = useState(false);\r\n  const [quizDuration, setQuizDuration] = useState(0);\r\n  const [earnedXp, setEarnedXp] = useState(0);\r\n  const [earnedCoin, setEarnedCoin] = useState(0);\r\n  const [showXpInfo, setShowXpInfo] = useState(false);\r\n  const [jokerPurchaseLoading, setJokerPurchaseLoading] = useState<string | null>(null);\r\n  const [jokerPurchaseMessage, setJokerPurchaseMessage] = useState<string | null>(null);\r\n\r\n  // Timer ref for optimization\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n  \r\n  // Questions cache with AB testing config\r\n  const questionsCache = useRef<Map<string, Question[]>>(new Map());\r\n\r\n  // Memoized values\r\n  const progressPercentage = useMemo(() => \r\n    questions.length > 0 ? ((currentQuestionIndex + 1) / questions.length) * 100 : 0,\r\n    [currentQuestionIndex, questions.length]\r\n  );\r\n\r\n  const currentQuestion = useMemo(() => \r\n    questions[currentQuestionIndex] || null,\r\n    [questions, currentQuestionIndex]\r\n  );\r\n\r\n  // Track quiz start\r\n  useEffect(() => {\r\n    trackUIEvent('quiz_started', {\r\n      variant: uiVariant,\r\n      config: uiConfig\r\n    });\r\n    trackLoadingEvent('quiz_started', {\r\n      variant: loadingVariant,\r\n      config: loadingConfig\r\n    });\r\n  }, [uiVariant, uiConfig, loadingVariant, loadingConfig, trackUIEvent, trackLoadingEvent]);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      return measureAsync('fetchQuestions', async () => {\r\n        try {\r\n          setIsLoading(true);\r\n          setError(null);\r\n\r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('🔍 Quiz sorgusu başlatılıyor...');\r\n            console.log('📝 subTopic:', subTopic);\r\n            console.log('📝 testNumber:', testNumber);\r\n            console.log('📝 parseInt(testNumber):', parseInt(testNumber || '1'));\r\n          }\r\n\r\n          const cacheKey = `${subTopic}-${testNumber}`;\r\n          \r\n          // Check cache first\r\n          if (questionsCache.current.has(cacheKey)) {\r\n            if (process.env.NODE_ENV === 'development') {\r\n              console.log('📦 Cache\\'den sorular yükleniyor...');\r\n            }\r\n            setQuestions(questionsCache.current.get(cacheKey)!);\r\n            setIsLoading(false);\r\n            recordMetric('cache_hit', 1);\r\n            trackLoadingEvent('cache_hit', { cacheKey });\r\n            return;\r\n          }\r\n\r\n          const questionsRef = collection(db, 'questions');\r\n          const q = query(\r\n            questionsRef,\r\n            where('topicId', '==', subTopic),\r\n            where('testNumber', '==', parseInt(testNumber || '1'))\r\n          );\r\n          \r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('🔄 Firebase sorgusu çalıştırılıyor...');\r\n          }\r\n          const querySnapshot = await getDocs(q);\r\n          \r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('📊 Sorgu sonucu:', querySnapshot.size, 'soru bulundu');\r\n          }\r\n\r\n          if (querySnapshot.empty) {\r\n            if (process.env.NODE_ENV === 'development') {\r\n              console.log('❌ Hiç soru bulunamadı!');\r\n            }\r\n            setError('Bu test için soru bulunamadı.');\r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n\r\n          const fetchedQuestions: Question[] = querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n          })) as Question[];\r\n\r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('✅ Sorular başarıyla yüklendi:', fetchedQuestions.length, 'adet');\r\n            console.log('📋 İlk soru:', fetchedQuestions[0]);\r\n          }\r\n\r\n          // Cache the questions based on AB test config\r\n          const cacheSize = loadingConfig.cacheSize || 10;\r\n          if (questionsCache.current.size < cacheSize) {\r\n            questionsCache.current.set(cacheKey, fetchedQuestions);\r\n          }\r\n\r\n          setQuestions(fetchedQuestions);\r\n          setIsLoading(false);\r\n          recordMetric('questions_loaded', fetchedQuestions.length);\r\n          trackLoadingEvent('questions_loaded', { \r\n            count: fetchedQuestions.length,\r\n            variant: loadingVariant \r\n          });\r\n        } catch (err) {\r\n          console.error('🚫 Firebase hatası:', err);\r\n          setError('Sorular yüklenirken bir hata oluştu.');\r\n          setIsLoading(false);\r\n          recordMetric('fetch_error', 1);\r\n          trackLoadingEvent('fetch_error', { error: err });\r\n        }\r\n      });\r\n    };\r\n\r\n    if (subTopic && testNumber) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('🚀 fetchQuestions çağrılıyor...');\r\n      }\r\n      fetchQuestions();\r\n    } else {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('⚠️ Geçersiz parametreler:', { subTopic, testNumber });\r\n      }\r\n      setError('Geçersiz quiz parametreleri.');\r\n      setIsLoading(false);\r\n    }\r\n  }, [subTopic, testNumber, measureAsync, recordMetric, trackLoadingEvent, loadingConfig, loadingVariant]);\r\n\r\n  useEffect(() => {\r\n    if (refreshUser) {\r\n      refreshUser().then(() => {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log('Quiz - Joker hakları güncellendi:', user?.jokers);\r\n        }\r\n      });\r\n    }\r\n  }, [refreshUser]);\r\n\r\n  // Joker haklarını kontrol et\r\n  useEffect(() => {\r\n    if (user?.jokers && process.env.NODE_ENV === 'development') {\r\n      console.log('Quiz - Mevcut joker hakları:', user.jokers);\r\n      console.log('Quiz - Joker kullanım sayıları:', user.jokersUsed);\r\n    }\r\n  }, [user?.jokers, user?.jokersUsed]);\r\n\r\n  // Optimized timer effect\r\n  useEffect(() => {\r\n    if (timeLeft > 0 && !isLoading && questions.length > 0) {\r\n      timerRef.current = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n      \r\n      return () => {\r\n        if (timerRef.current) {\r\n          clearInterval(timerRef.current);\r\n        }\r\n      };\r\n    } else if (timeLeft === 0) {\r\n      finishQuiz();\r\n    }\r\n    return undefined;\r\n  }, [timeLeft, isLoading, questions.length]);\r\n\r\n  // Format time display - memoized\r\n  const formatTime = useCallback((seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  }, []);\r\n\r\n  // Optimized answer selection handler\r\n  const handleAnswerSelect = useCallback((answerIndex: number) => {\r\n    if (isAnswered) return;\r\n    if (isDoubleAnswerActive) {\r\n      if (selectedAnswers.includes(answerIndex)) return;\r\n      const newSelected = [...selectedAnswers, answerIndex];\r\n      setSelectedAnswers(newSelected);\r\n      if (newSelected.length === 2) {\r\n        setIsAnswered(true);\r\n        const currentQuestion = questions[currentQuestionIndex];\r\n        if (currentQuestion && currentQuestion.correctAnswer !== undefined && newSelected.includes(currentQuestion.correctAnswer)) {\r\n          setScore(prev => prev + 1);\r\n        }\r\n      }\r\n    } else {\r\n      setSelectedAnswer(answerIndex);\r\n      setIsAnswered(true);\r\n      const currentQuestion = questions[currentQuestionIndex];\r\n      if (currentQuestion && currentQuestion.correctAnswer !== undefined && answerIndex === currentQuestion.correctAnswer) {\r\n        setScore(prev => prev + 1);\r\n      }\r\n    }\r\n  }, [isAnswered, isDoubleAnswerActive, selectedAnswers, questions, currentQuestionIndex]);\r\n\r\n  // Optimized next question handler\r\n  const handleNextQuestion = useCallback(() => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n      setSelectedAnswer(null);\r\n      setIsAnswered(false);\r\n      setSelectedAnswers([]);\r\n      setIsDoubleAnswerActive(false);\r\n      // setIsAutoCorrectActive(false);\r\n    } else {\r\n      finishQuiz(score);\r\n    }\r\n  }, [currentQuestionIndex, questions.length, score]);\r\n\r\n  // Test sonucu kaydetme fonksiyonu - Sıfırdan yazıldı\r\n  const saveTestResult = async (finalScore: number, totalQuestions: number) => {\r\n    if (!user || !subTopic || !testNumber) {\r\n      console.error('❌ Test sonucu kaydedilemedi: Gerekli parametreler eksik');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Konu anahtarı oluştur - Anahtar uyumsuzluğunu düzelt\r\n      const mainTopic = window.location.pathname.split('/')[1];\r\n      let subjectTopicKey = `${mainTopic}_${subTopic}`;\r\n      \r\n      // Eğer mainTopic \"turkce\" ise, Firestore'daki \"quiz\" anahtarını kullan\r\n      if (mainTopic === 'turkce') {\r\n        subjectTopicKey = `quiz_${subTopic}`;\r\n      }\r\n      const testId = testNumber;\r\n      \r\n      // Başarı hesaplama (7/10 = %70)\r\n      const percentage = Math.round((finalScore / totalQuestions) * 100);\r\n      const completed = finalScore >= 7; // 7 doğru kesin eşik\r\n\r\n      console.log('🎯 Test Sonucu Kaydediliyor:', {\r\n        finalScore,\r\n        totalQuestions,\r\n        percentage,\r\n        completed,\r\n        subjectTopicKey,\r\n        testId\r\n      });\r\n\r\n      // Yeni test sonucu\r\n      const newTestResult = {\r\n        score: finalScore,\r\n        total: totalQuestions,\r\n        percentage: percentage,\r\n        completed: completed,\r\n        attempts: 1\r\n      };\r\n\r\n      // Mevcut test sonuçlarını al\r\n      const currentTestResults = user.testResults || {};\r\n      const currentTopicResults = currentTestResults[subjectTopicKey] || {};\r\n      \r\n      // Eğer test daha önce çözülmüşse attempts'ı artır\r\n      if (currentTopicResults[testId]) {\r\n        newTestResult.attempts = (currentTopicResults[testId]?.attempts || 0) + 1;\r\n      }\r\n\r\n      // Test sonuçlarını güncelle\r\n      const updatedTopicResults = {\r\n        ...currentTopicResults,\r\n        [testId]: newTestResult\r\n      };\r\n\r\n      const updatedTestResults = {\r\n        ...currentTestResults,\r\n        [subjectTopicKey]: updatedTopicResults\r\n      };\r\n\r\n      // Firestore'a kaydet (ana veri kaynağı)\r\n      try {\r\n        const userRef = doc(db, 'users', user.id);\r\n        await updateDoc(userRef, {\r\n          testResults: updatedTestResults\r\n        });\r\n        console.log('✅ Firestore\\'a test sonuçları kaydedildi');\r\n      } catch (firestoreError) {\r\n        console.error('❌ Firestore hatası (testResults):', firestoreError);\r\n        throw new Error('Test sonucu kaydedilemedi');\r\n      }\r\n\r\n      // Local user state'ini güncelle\r\n      updateUser({\r\n        ...user,\r\n        testResults: updatedTestResults\r\n      });\r\n\r\n      console.log('✅ Local state güncellendi');\r\n      console.log('🎉 Test sonucu başarıyla kaydedildi:', newTestResult);\r\n\r\n      // Artık otomatik test açma sistemi kaldırıldı\r\n      // Test 2 ve sonrası için coin ile satın alma gerekli\r\n      if (completed) {\r\n        console.log('✅ Test başarıyla tamamlandı! Bir sonraki test için coin ile satın alma gerekli.');\r\n      } else {\r\n        console.log('❌ Test başarısız, bir sonraki test için önce bu testi başarıyla tamamlamanız gerekli.');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Test sonucu kaydetme hatası:', error);\r\n    }\r\n  };\r\n\r\n  // Finish quiz\r\n  const finishQuiz = async (finalScore = score) => {\r\n    try {\r\n      setQuizDuration(600 - timeLeft);\r\n      setShowStats(true);\r\n      \r\n      // 1. Test sonuçlarını kaydet\r\n      await saveTestResult(finalScore, questions.length);\r\n      \r\n      // 2. İstatistikleri güncelle\r\n      await updateUserStats(\r\n        finalScore,\r\n        questions.length,\r\n        600 - timeLeft // duration\r\n      );\r\n      \r\n      // 3. XP, seviye ve rütbe güncelle\r\n      let xpResult = null;\r\n      if (user) {\r\n        xpResult = await updateXpLevelRank({\r\n          user,\r\n          correct: finalScore,\r\n          total: questions.length,\r\n        });\r\n        if (xpResult) {\r\n          console.log('XP Sonucu:', xpResult);\r\n        }\r\n        if (xpResult && typeof xpResult.gainedXp === 'number') {\r\n          setEarnedXp(xpResult.gainedXp);\r\n          setEarnedCoin(xpResult.gainedXp); // Coin de aynı miktarda kazanılıyor\r\n        }\r\n      }\r\n      // Yönlendirme kaldırıldı, istatistik kartı gösterilecek\r\n    } catch (err) {\r\n      setError('İstatistikler kaydedilemedi. Lütfen tekrar deneyin.');\r\n    }\r\n  };\r\n\r\n  // Handle retry - aynı test sayfasına yönlendir\r\n  const handleRetry = () => {\r\n    if (subTopic && testNumber) {\r\n      navigate(`/quiz/${window.location.pathname.split('/')[1]}/${subTopic}/${testNumber}`);\r\n    } else {\r\n      navigate(-1); // Eğer parametreler yoksa geri dön\r\n    }\r\n  };\r\n\r\n  // Handle go back\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  // Joker satın alma fiyatları\r\n  const JOKER_PRICES: Record<JokerType, number> = {\r\n    eliminate: 50,\r\n    extraTime: 75,\r\n    doubleAnswer: 100,\r\n    autoCorrect: 150,\r\n  };\r\n\r\n  // Joker satın alma fonksiyonu\r\n  const handleJokerPurchase = async (type: JokerType) => {\r\n    if (!user) return;\r\n    \r\n    setJokerPurchaseLoading(type);\r\n    setJokerPurchaseMessage(null);\r\n\r\n    try {\r\n      const price = JOKER_PRICES[type];\r\n      \r\n      // Coin kontrolü\r\n      if ((user.coins || 0) < price) {\r\n        setJokerPurchaseMessage('Yetersiz coin! Bu joker için daha fazla coin gerekli.');\r\n        return;\r\n      }\r\n\r\n      // Joker miktar kontrolü\r\n      const currentCount = user.jokers?.[type]?.count || 0;\r\n      if (currentCount >= 3) {\r\n        setJokerPurchaseMessage(`Bu jokerden zaten maksimum miktarda (3 adet) sahipsiniz!`);\r\n        return;\r\n      }\r\n\r\n      const userRef = doc(db, 'users', user.id);\r\n      const updates: any = {\r\n        coins: increment(-price),\r\n        [`jokers.${type}.count`]: increment(1)\r\n      };\r\n\r\n      await updateDoc(userRef, updates);\r\n\r\n      // Local user state'ini güncelle\r\n      const updatedUser = { ...user };\r\n      updatedUser.coins = (user.coins || 0) - price;\r\n      updatedUser.jokers = { ...user.jokers };\r\n      updatedUser.jokers[type].count = Math.min(currentCount + 1, 3);\r\n      updateUser(updatedUser);\r\n\r\n      setJokerPurchaseMessage('✅ Joker başarıyla satın alındı!');\r\n      setTimeout(() => setJokerPurchaseMessage(null), 2000);\r\n\r\n    } catch (error) {\r\n      console.error('Joker satın alma hatası:', error);\r\n      setJokerPurchaseMessage('❌ Satın alma sırasında bir hata oluştu. Lütfen tekrar deneyin.');\r\n    } finally {\r\n      setJokerPurchaseLoading(null);\r\n    }\r\n  };\r\n\r\n  // Joker kullanımı\r\n  const handleUseJoker = async (type: JokerType) => {\r\n    if (!user || !user.jokers || !user.jokersUsed) return;\r\n    try {\r\n      const { newJokers, newJokersUsed } = await jokerKullan(\r\n        user.id,\r\n        user.jokers,\r\n        user.jokersUsed,\r\n        type\r\n      );\r\n      updateUser({ ...user, jokers: newJokers, jokersUsed: newJokersUsed });\r\n      if (refreshUser) refreshUser();\r\n      if (type === 'eliminate') {\r\n        const currentQ = questions[currentQuestionIndex];\r\n        if (!currentQ) return;\r\n        const wrongOptions = [0,1,2,3].filter(i => i !== currentQ.correctAnswer);\r\n        const shuffled = wrongOptions.sort(() => Math.random() - 0.5);\r\n        setEliminatedOptions(shuffled.slice(0,2));\r\n      }\r\n      if (type === 'extraTime') {\r\n        setTimeLeft(prev => prev + 60);\r\n      }\r\n      if (type === 'doubleAnswer') {\r\n        setIsDoubleAnswerActive(true);\r\n        setSelectedAnswers([]);\r\n      }\r\n      if (type === 'autoCorrect') {\r\n        // setIsAutoCorrectActive(true);\r\n        // Otomatik doğru kabul et ama bir sonraki soruya geçme\r\n        setSelectedAnswer(questions[currentQuestionIndex]?.correctAnswer || 0);\r\n        setIsAnswered(true);\r\n        setScore(prev => prev + 1);\r\n      }\r\n    } catch (err: any) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  // Soru değiştiğinde joker state'lerini sıfırla\r\n  useEffect(() => {\r\n    setEliminatedOptions([]);\r\n    setIsDoubleAnswerActive(false);\r\n    setSelectedAnswers([]);\r\n    // setIsAutoCorrectActive(false);\r\n  }, [currentQuestionIndex]);\r\n\r\n  useEffect(() => {\r\n    if (showStats) {\r\n      const successRate = questions.length > 0 ? Math.round((score / questions.length) * 100) : 0;\r\n      if (successRate >= 70) {\r\n        if (typeof confetti === 'function') {\r\n          confetti({\r\n            particleCount: 120,\r\n            spread: 80,\r\n            origin: { y: 0.6 },\r\n            zIndex: 9999\r\n          });\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [showStats]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Quiz yükleniyor...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-error\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h2>Hata</h2>\r\n          <p>{error}</p>\r\n          <div className=\"error-actions\">\r\n            <button onClick={handleRetry} className=\"retry-button\">\r\n              Tekrar Dene\r\n            </button>\r\n            <button onClick={handleGoBack} className=\"back-button\">\r\n              Geri Dön\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-error\">\r\n          <div className=\"error-icon\">📝</div>\r\n          <h2>Soru Bulunamadı</h2>\r\n          <p>Bu test için henüz soru eklenmemiş.</p>\r\n          <button onClick={handleGoBack} className=\"back-button\">\r\n            Geri Dön\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showStats) {\r\n    const successRate = questions.length > 0 ? Math.round((score / questions.length) * 100) : 0;\r\n    const isSuccessful = score >= 7; // 7 doğru kesin eşik\r\n    \r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-stats-card animated-stats-card\"\r\n          style={{\r\n            maxWidth: 540,\r\n            margin: '64px auto',\r\n            background: 'linear-gradient(120deg, #f8fafc 0%, #e0c3fc 100%)',\r\n            borderRadius: 40,\r\n            boxShadow: '0 12px 48px #764ba244, 0 2px 12px #fff8',\r\n            padding: 48,\r\n            textAlign: 'center',\r\n            position: 'relative',\r\n            minHeight: 440,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            animation: 'popInStats 1.1s cubic-bezier(.39,.575,.56,1.000)'\r\n          }}>\r\n          <h2 style={{color: '#764ba2', fontWeight: 900, marginBottom: 24, fontSize: 34, letterSpacing: 1}}>🎉 Quiz Sonuçları 🎉</h2>\r\n          \r\n          {/* Başarı Durumu Mesajı */}\r\n          <div style={{\r\n            padding: '16px 24px',\r\n            borderRadius: 16,\r\n            marginBottom: 24,\r\n            fontWeight: 800,\r\n            fontSize: 20,\r\n            background: isSuccessful \r\n              ? 'linear-gradient(90deg, #d4edda 0%, #c3e6cb 100%)'\r\n              : 'linear-gradient(90deg, #f8d7da 0%, #f5c6cb 100%)',\r\n            color: isSuccessful ? '#155724' : '#721c24',\r\n            border: `3px solid ${isSuccessful ? '#28a745' : '#dc3545'}`,\r\n            boxShadow: `0 4px 16px ${isSuccessful ? '#28a74533' : '#dc354533'}`\r\n          }}>\r\n            {isSuccessful ? (\r\n              <>\r\n                <span style={{ fontSize: 24, marginRight: 8 }}>✅</span>\r\n                Başarı Sağlandı! (%{successRate})\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span style={{ fontSize: 24, marginRight: 8 }}>❌</span>\r\n                Başarı Sağlanamadı! (%{successRate})\r\n              </>\r\n            )}\r\n          </div>\r\n          <div style={{ display: 'flex', gap: 24, justifyContent: 'center', marginBottom: 28 }}>\r\n            {/* XP Kutusu */}\r\n            <div style={{\r\n              background: 'linear-gradient(90deg, #f59e42 0%, #ffe082 100%)',\r\n              borderRadius: 18,\r\n              boxShadow: '0 2px 12px #f59e4255',\r\n              padding: '18px 32px',\r\n              fontWeight: 900,\r\n              fontSize: 28,\r\n              color: '#fff',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 12,\r\n              minWidth: 120,\r\n              justifyContent: 'center',\r\n            }}>\r\n              <span style={{ fontSize: 36, marginRight: 6 }}>⭐</span>\r\n              <span style={{ fontSize: 32 }}>{earnedXp}</span>\r\n              <span style={{ fontWeight: 700, fontSize: 18, color: '#fffbe7', marginLeft: 6 }}>XP</span>\r\n            </div>\r\n            {/* Coin Kutusu */}\r\n            <div style={{\r\n              background: 'linear-gradient(90deg, #ffe082 0%, #ffd54f 100%)',\r\n              borderRadius: 18,\r\n              boxShadow: '0 2px 12px #ffecb355',\r\n              padding: '18px 32px',\r\n              fontWeight: 900,\r\n              fontSize: 28,\r\n              color: '#ffb300',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 12,\r\n              minWidth: 120,\r\n              justifyContent: 'center',\r\n            }}>\r\n              <span style={{ fontSize: 36, marginRight: 6 }}>🪙</span>\r\n              <span style={{ fontSize: 32 }}>{earnedCoin}</span>\r\n              <span style={{ fontWeight: 700, fontSize: 18, color: '#bfa040', marginLeft: 6 }}>coin</span>\r\n            </div>\r\n          </div>\r\n          <div style={{fontSize: 26, fontWeight: 800, marginBottom: 18}}>\r\n            Doğru: <span style={{color: '#22c55e'}}>{score}</span> / Yanlış: <span style={{color: '#ef4444'}}>{questions.length - score}</span>\r\n          </div>\r\n          <div style={{fontSize: 22, marginBottom: 10}}>Başarı Oranı: <b style={{color: '#2563eb'}}>{successRate}%</b></div>\r\n          <div style={{fontSize: 22, marginBottom: 10}}>Toplam Süre: <b style={{color: '#7c3aed'}}>{formatTime(quizDuration)}</b></div>\r\n          \r\n          {/* Yönlendirme Butonları */}\r\n          <div style={{ display: 'flex', gap: 16, marginTop: 32, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n            {isSuccessful ? (\r\n              // Başarı sağlandıysa - Test seçim sayfasına dön\r\n              <button \r\n                onClick={() => navigate(-1)} \r\n                style={{\r\n                  padding: '16px 44px', \r\n                  background: 'linear-gradient(90deg,#28a745,#20c997)', \r\n                  color: '#fff', \r\n                  border: 'none', \r\n                  borderRadius: 16, \r\n                  fontWeight: 800, \r\n                  fontSize: 22, \r\n                  cursor: 'pointer', \r\n                  boxShadow: '0 6px 24px #28a74544', \r\n                  letterSpacing: 1\r\n                }}\r\n              >\r\n                ✅ Testi Seçimine Dön\r\n              </button>\r\n            ) : (\r\n              // Başarı sağlanamadıysa - Test seçim ekranına dön\r\n              <button \r\n                onClick={() => navigate(-1)} \r\n                style={{\r\n                  padding: '16px 44px', \r\n                  background: 'linear-gradient(90deg,#dc3545,#fd7e14)', \r\n                  color: '#fff', \r\n                  border: 'none', \r\n                  borderRadius: 16, \r\n                  fontWeight: 800, \r\n                  fontSize: 22, \r\n                  cursor: 'pointer', \r\n                  boxShadow: '0 6px 24px #dc354544', \r\n                  letterSpacing: 1\r\n                }}\r\n              >\r\n                🔄 Test Seçimine Dön\r\n              </button>\r\n            )}\r\n            \r\n            <button \r\n              onClick={() => navigate('/')} \r\n              style={{\r\n                padding: '16px 44px', \r\n                background: 'linear-gradient(90deg,#667eea,#764ba2)', \r\n                color: '#fff', \r\n                border: 'none', \r\n                borderRadius: 16, \r\n                fontWeight: 800, \r\n                fontSize: 22, \r\n                cursor: 'pointer', \r\n                boxShadow: '0 6px 24px #764ba244', \r\n                letterSpacing: 1\r\n              }}\r\n            >\r\n              🏠 Ana Sayfaya Dön\r\n            </button>\r\n          </div>\r\n          <div style={{marginTop: 28}}>\r\n            <button onClick={() => setShowXpInfo(v => !v)} style={{background: 'none', border: '2px solid #764ba2', color: '#764ba2', borderRadius: 10, padding: '8px 24px', fontWeight: 700, cursor: 'pointer', fontSize: 17, marginBottom: 8, transition: 'all 0.2s'}}>\r\n              XP Kazanma Kuralları {showXpInfo ? '▲' : '▼'}\r\n            </button>\r\n            {showXpInfo && (\r\n              <div style={{\r\n                fontSize: 17,\r\n                color: '#333',\r\n                marginTop: 8,\r\n                background: 'linear-gradient(120deg, #fffbe7 0%, #e0c3fc22 100%)',\r\n                borderRadius: 14,\r\n                padding: 18,\r\n                textAlign: 'left',\r\n                boxShadow: '0 2px 12px #764ba211',\r\n                fontWeight: 500,\r\n                border: '1.5px solid #ffe082',\r\n                maxWidth: 340,\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n              }}>\r\n                <div style={{ fontWeight: 900, fontSize: 19, color: '#a084ee', marginBottom: 10, textAlign: 'center', letterSpacing: 1 }}>\r\n                  XP & Coin Kazanma Kuralları\r\n                </div>\r\n                <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>\r\n                  <li style={{ marginBottom: 10, display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                    <span style={{ fontSize: 22 }}>✅</span>\r\n                    <span>Her doğru cevap: <b style={{ color: '#f59e42' }}>+20 XP</b> <span style={{ color: '#bfa040', fontWeight: 700 }}>ve</span> <b style={{ color: '#ffb300' }}>+20 coin</b></span>\r\n                  </li>\r\n                  <li style={{ marginBottom: 10, display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                    <span style={{ fontSize: 22 }}>🏆</span>\r\n                    <span>%100 başarı: <b style={{ color: '#f59e42' }}>2 katı XP</b> <span style={{ color: '#bfa040', fontWeight: 700 }}>ve</span> <b style={{ color: '#ffb300' }}>2 katı coin</b></span>\r\n                  </li>\r\n                  <li style={{ marginBottom: 10, display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                    <span style={{ fontSize: 22 }}>👍</span>\r\n                    <span>%70 ve üzeri başarı: <b style={{ color: '#f59e42' }}>Standart XP</b> <span style={{ color: '#bfa040', fontWeight: 700 }}>ve</span> <b style={{ color: '#ffb300' }}>standart coin</b></span>\r\n                  </li>\r\n                  <li style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                    <span style={{ fontSize: 22 }}>🟠</span>\r\n                    <span>Daha düşük başarı: <b style={{ color: '#f59e42' }}>Yarı XP</b> <span style={{ color: '#bfa040', fontWeight: 700 }}>ve</span> <b style={{ color: '#ffb300' }}>yarı coin</b></span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <style>{`\r\n            @keyframes popInStats {\r\n              0% { opacity: 0; transform: scale(0.7) translateY(60px); }\r\n              60% { opacity: 1; transform: scale(1.08) translateY(-8px); }\r\n              80% { transform: scale(0.98) translateY(4px); }\r\n              100% { opacity: 1; transform: scale(1) translateY(0); }\r\n            }\r\n          `}</style>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {/* Background gradient and geometric shapes */}\r\n      <div className=\"quiz-background\">\r\n        <div className=\"geometric-shape shape-1\"></div>\r\n        <div className=\"geometric-shape shape-2\"></div>\r\n        <div className=\"geometric-shape shape-3\"></div>\r\n      </div>\r\n      {/* Main quiz card - TÜM İÇERİK BURADA */}\r\n      <div className=\"quiz-card\">\r\n\r\n\r\n        {/* Kompakt ve sade Joker Barı */}\r\n        {user && user.jokers && user.jokersUsed && (\r\n          <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            gap: 16,\r\n            marginBottom: 24,\r\n            marginTop: 16,\r\n            flexWrap: 'wrap',\r\n            padding: '16px',\r\n            background: 'rgba(255, 255, 255, 0.1)',\r\n            borderRadius: '16px',\r\n            backdropFilter: 'blur(10px)',\r\n            border: '1px solid rgba(118, 75, 162, 0.1)',\r\n          }}>\r\n            {JOKER_TYPES.map((type) => {\r\n              const jokerCount = user.jokers[type].count;\r\n              const isDisabled = jokerCount === 0;\r\n              const price = JOKER_PRICES[type];\r\n              \r\n              return (\r\n                <div\r\n                  key={type}\r\n                  className={`joker-emoji-box ${isDisabled ? 'disabled' : ''}`}\r\n                  style={{\r\n                    minWidth: 70,\r\n                    minHeight: 80,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    opacity: isDisabled ? 0.6 : 1,\r\n                    cursor: isDisabled ? 'pointer' : 'pointer',\r\n                    position: 'relative',\r\n                  }}\r\n                  title={`${type === 'eliminate' ? '2 Şık Eleme' : \r\n                          type === 'extraTime' ? 'Ekstra 60sn' :\r\n                          type === 'doubleAnswer' ? 'Çift Cevap' : 'Doğru Kabul'} - Kullanıldı: ${user.jokersUsed[type] || 0}`}\r\n                  onClick={e => {\r\n                    if (isDisabled) {\r\n                      // Joker bittiğinde satın alma\r\n                      handleJokerPurchase(type);\r\n                    } else {\r\n                      // Joker kullanma\r\n                      if (type !== 'autoCorrect') {\r\n                        const el = e.currentTarget;\r\n                        if (el && el.classList) {\r\n                          el.classList.add('joker-emoji-clicked');\r\n                          setTimeout(() => {\r\n                            if (el && el.classList) el.classList.remove('joker-emoji-clicked');\r\n                          }, 400);\r\n                        }\r\n                        handleUseJoker(type);\r\n                      } else {\r\n                        handleUseJoker(type);\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  <span\r\n                    className=\"joker-emoji\"\r\n                    style={{ \r\n                      fontSize: 32, \r\n                      marginBottom: 6,\r\n                      filter: isDisabled ? 'grayscale(1)' : 'none'\r\n                    }}\r\n                  >\r\n                    {JOKER_ICONS[type]}\r\n                  </span>\r\n                  \r\n                  {isDisabled ? (\r\n                    // Joker bittiğinde fiyat butonu göster\r\n                    <div style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      gap: 2\r\n                    }}>\r\n                      <span style={{ \r\n                        fontSize: 12, \r\n                        color: '#ffb300', \r\n                        fontWeight: 700,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 2\r\n                      }}>\r\n                        <span style={{ fontSize: 10 }}>🪙</span>\r\n                        {price}\r\n                      </span>\r\n                      <span style={{ \r\n                        fontSize: 10, \r\n                        color: '#999', \r\n                        textAlign: 'center',\r\n                        lineHeight: 1.2\r\n                      }}>\r\n                        {jokerPurchaseLoading === type ? 'Yükleniyor...' : 'Satın Al'}\r\n                      </span>\r\n                    </div>\r\n                  ) : (\r\n                    // Normal joker sayısı göster\r\n                    <>\r\n                      <span style={{ \r\n                        fontSize: 16, \r\n                        color: '#764ba2', \r\n                        fontWeight: 700, \r\n                        marginBottom: 2 \r\n                      }}>\r\n                        {jokerCount}\r\n                      </span>\r\n                      <span style={{ \r\n                        fontSize: 10, \r\n                        color: '#999', \r\n                        textAlign: 'center',\r\n                        lineHeight: 1.2\r\n                      }}>\r\n                        Kullanıldı: {user.jokersUsed[type] || 0}\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Joker Satın Alma Mesajı */}\r\n        {jokerPurchaseMessage && (\r\n          <div style={{\r\n            position: 'fixed',\r\n            top: '20px',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            zIndex: 1000,\r\n            padding: '12px 24px',\r\n            borderRadius: '12px',\r\n            background: jokerPurchaseMessage.includes('✅') ? '#d4edda' : '#f8d7da',\r\n            color: jokerPurchaseMessage.includes('✅') ? '#155724' : '#721c24',\r\n            fontWeight: 600,\r\n            fontSize: '14px',\r\n            boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n            border: `2px solid ${jokerPurchaseMessage.includes('✅') ? '#c3e6cb' : '#f5c6cb'}`\r\n          }}>\r\n            {jokerPurchaseMessage}\r\n          </div>\r\n        )}\r\n        {/* Header section */}\r\n        <div className=\"quiz-header\">\r\n          {/* Quiz başlığı ve sayaç */}\r\n          <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: '100%',\r\n            marginBottom: 18,\r\n            position: 'relative',\r\n          }}>\r\n            {/* Quiz başlığı */}\r\n            <h1 style={{\r\n              flex: 1,\r\n              textAlign: 'left',\r\n              fontSize: 32,\r\n              fontWeight: 900,\r\n              color: '#7c3aed',\r\n              margin: 0,\r\n              letterSpacing: 1,\r\n            }}>Quiz</h1>\r\n            {/* Anlık Doğru/Yanlış Sayacı */}\r\n            <div style={{\r\n              position: 'absolute',\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              zIndex: 10,\r\n              background: 'linear-gradient(90deg, #f8fafc 0%, #e0c3fc 100%)',\r\n              borderRadius: 18,\r\n              boxShadow: '0 2px 12px #764ba244',\r\n              padding: '8px 28px',\r\n              fontWeight: 900,\r\n              fontSize: 20,\r\n              color: '#222',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 16,\r\n              border: '2px solid #e0c3fc',\r\n            }}>\r\n              <span>Doğru: <span style={{ color: '#22c55e', fontWeight: 900 }}>{score}</span></span>\r\n              <span>/</span>\r\n              <span>Yanlış: <span style={{ color: '#ef4444', fontWeight: 900 }}>{currentQuestionIndex - score >= 0 ? currentQuestionIndex - score : 0}</span></span>\r\n            </div>\r\n            {/* Zamanlayıcı ve soru sayacı */}\r\n            <div style={{\r\n              flex: 1,\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              alignItems: 'center',\r\n              gap: 12,\r\n            }}>\r\n              <div style={{\r\n                background: '#f3e8ff',\r\n                borderRadius: 12,\r\n                padding: '6px 18px',\r\n                fontWeight: 700,\r\n                color: '#7c3aed',\r\n                fontSize: 20,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 6,\r\n              }}>\r\n                <span style={{ fontSize: 20 }}>⏱️</span>\r\n                <span>{formatTime(timeLeft)}</span>\r\n              </div>\r\n              <span style={{ color: '#888', fontWeight: 600, fontSize: 16 }}>Soru {currentQuestionIndex + 1} / {questions.length}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Progress bar */}\r\n        <div className=\"progress-container\">\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\"\r\n              style={{ width: `${progressPercentage}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        {/* Question section */}\r\n        <div className=\"question-section\">\r\n          <div className=\"question-number\">\r\n            Soru {currentQuestionIndex + 1}\r\n          </div>\r\n          <div className=\"question-text\">\r\n            {currentQuestion?.question || 'Soru yükleniyor...'}\r\n          </div>\r\n        </div>\r\n        {/* Answer options */}\r\n        <div className=\"answer-options\">\r\n          {currentQuestion?.options?.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className={`answer-button ${\r\n                isDoubleAnswerActive\r\n                  ? selectedAnswers.includes(index)\r\n                    ? (index === currentQuestion.correctAnswer ? 'correct' : 'incorrect')\r\n                    : ''\r\n                  : selectedAnswer === index\r\n                    ? index === currentQuestion.correctAnswer\r\n                      ? 'correct'\r\n                      : 'incorrect'\r\n                    : ''\r\n              } ${isAnswered && index === currentQuestion.correctAnswer ? 'correct' : ''} ${\r\n                eliminatedOptions.includes(index) ? 'eliminated' : ''\r\n              }`}\r\n              onClick={() => handleAnswerSelect(index)}\r\n              disabled={isAnswered}\r\n            >\r\n              <span className=\"answer-letter\">{String.fromCharCode(65 + index)}</span>\r\n              <span className=\"answer-text\">{option}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {/* Explanation (shown after answering) */}\r\n        {isAnswered && currentQuestion?.explanation && (\r\n          <div className=\"explanation\">\r\n            <h4>Açıklama:</h4>\r\n            <p>{currentQuestion.explanation}</p>\r\n          </div>\r\n        )}\r\n        {/* Navigation */}\r\n        <div className=\"quiz-navigation\">\r\n          <button\r\n            className=\"next-button\"\r\n            onClick={handleNextQuestion}\r\n            disabled={!isAnswered}\r\n          >\r\n            {currentQuestionIndex < questions.length - 1 ? 'Sonraki Soru' : 'Quiz\\'i Bitir'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;","// Performance monitoring utilities\r\nexport class PerformanceMonitor {\r\n  private static instance: PerformanceMonitor;\r\n  private metrics: Map<string, number[]> = new Map();\r\n  private observers: PerformanceObserver[] = [];\r\n\r\n  private constructor() {\r\n    this.initObservers();\r\n  }\r\n\r\n  static getInstance(): PerformanceMonitor {\r\n    if (!PerformanceMonitor.instance) {\r\n      PerformanceMonitor.instance = new PerformanceMonitor();\r\n    }\r\n    return PerformanceMonitor.instance;\r\n  }\r\n\r\n  private initObservers() {\r\n    // Observe navigation timing\r\n    if ('PerformanceObserver' in window) {\r\n      const navigationObserver = new PerformanceObserver((list) => {\r\n        for (const entry of list.getEntries()) {\r\n          if (entry.entryType === 'navigation') {\r\n            const navEntry = entry as PerformanceNavigationTiming;\r\n            this.recordMetric('navigation', navEntry.loadEventEnd - navEntry.loadEventStart);\r\n          }\r\n        }\r\n      });\r\n      \r\n      try {\r\n        navigationObserver.observe({ entryTypes: ['navigation'] });\r\n        this.observers.push(navigationObserver);\r\n      } catch (e) {\r\n        console.warn('Navigation timing not supported');\r\n      }\r\n\r\n      // Observe paint timing\r\n      const paintObserver = new PerformanceObserver((list) => {\r\n        for (const entry of list.getEntries()) {\r\n          if (entry.entryType === 'paint') {\r\n            this.recordMetric('paint', entry.startTime);\r\n          }\r\n        }\r\n      });\r\n      \r\n      try {\r\n        paintObserver.observe({ entryTypes: ['paint'] });\r\n        this.observers.push(paintObserver);\r\n      } catch (e) {\r\n        console.warn('Paint timing not supported');\r\n      }\r\n    }\r\n  }\r\n\r\n  recordMetric(name: string, value: number) {\r\n    if (!this.metrics.has(name)) {\r\n      this.metrics.set(name, []);\r\n    }\r\n    this.metrics.get(name)!.push(value);\r\n  }\r\n\r\n  getAverageMetric(name: string): number {\r\n    const values = this.metrics.get(name);\r\n    if (!values || values.length === 0) return 0;\r\n    return values.reduce((sum, val) => sum + val, 0) / values.length;\r\n  }\r\n\r\n  getMetrics(): Record<string, number[]> {\r\n    const result: Record<string, number[]> = {};\r\n    this.metrics.forEach((values, key) => {\r\n      result[key] = [...values];\r\n    });\r\n    return result;\r\n  }\r\n\r\n  measureAsync<T>(name: string, fn: () => Promise<T>): Promise<T> {\r\n    const start = performance.now();\r\n    return fn().finally(() => {\r\n      const duration = performance.now() - start;\r\n      this.recordMetric(name, duration);\r\n    });\r\n  }\r\n\r\n  measureSync<T>(name: string, fn: () => T): T {\r\n    const start = performance.now();\r\n    try {\r\n      return fn();\r\n    } finally {\r\n      const duration = performance.now() - start;\r\n      this.recordMetric(name, duration);\r\n    }\r\n  }\r\n\r\n  reportMetrics() {\r\n    const metrics = this.getMetrics();\r\n    console.log('Performance Metrics:', metrics);\r\n    \r\n    // Send to analytics if available\r\n    if (process.env.NODE_ENV === 'production') {\r\n      // Send to analytics service\r\n      this.sendToAnalytics(metrics);\r\n    }\r\n  }\r\n\r\n  private sendToAnalytics(metrics: Record<string, number[]>) {\r\n    // Implementation for sending metrics to analytics service\r\n    // This could be Google Analytics, Firebase Analytics, etc.\r\n    try {\r\n      // Example: Send to Firebase Analytics\r\n      if (typeof window !== 'undefined' && (window as any).gtag) {\r\n        Object.entries(metrics).forEach(([name, values]) => {\r\n          const average = values.reduce((sum, val) => sum + val, 0) / values.length;\r\n          (window as any).gtag('event', 'performance_metric', {\r\n            metric_name: name,\r\n            metric_value: average,\r\n            metric_count: values.length\r\n          });\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.warn('Failed to send metrics to analytics:', e);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.observers.forEach(observer => observer.disconnect());\r\n    this.observers = [];\r\n    this.metrics.clear();\r\n  }\r\n}\r\n\r\n// React Hook for performance monitoring\r\nexport const usePerformanceMonitor = () => {\r\n  const monitor = PerformanceMonitor.getInstance();\r\n\r\n  const measureAsync = (name: string, fn: () => Promise<any>) => {\r\n    return monitor.measureAsync(name, fn);\r\n  };\r\n\r\n  const measureSync = (name: string, fn: () => any) => {\r\n    return monitor.measureSync(name, fn);\r\n  };\r\n\r\n  const recordMetric = (name: string, value: number) => {\r\n    monitor.recordMetric(name, value);\r\n  };\r\n\r\n  return {\r\n    measureAsync,\r\n    measureSync,\r\n    recordMetric,\r\n    getMetrics: () => monitor.getMetrics(),\r\n    reportMetrics: () => monitor.reportMetrics()\r\n  };\r\n};\r\n\r\n// Web Vitals monitoring\r\nexport const reportWebVitals = (onPerfEntry: (metric: any) => void) => {\r\n  import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n    getCLS(onPerfEntry);\r\n    getFID(onPerfEntry);\r\n    getFCP(onPerfEntry);\r\n    getLCP(onPerfEntry);\r\n    getTTFB(onPerfEntry);\r\n  });\r\n};\r\n\r\n// Memory usage monitoring\r\nexport const getMemoryUsage = () => {\r\n  if ('memory' in performance) {\r\n    const memory = (performance as any).memory;\r\n    return {\r\n      usedJSHeapSize: memory.usedJSHeapSize,\r\n      totalJSHeapSize: memory.totalJSHeapSize,\r\n      jsHeapSizeLimit: memory.jsHeapSizeLimit\r\n    };\r\n  }\r\n  return null;\r\n};\r\n\r\n// Network monitoring\r\nexport const getNetworkInfo = () => {\r\n  if ('connection' in navigator) {\r\n    const connection = (navigator as any).connection;\r\n    return {\r\n      effectiveType: connection.effectiveType,\r\n      downlink: connection.downlink,\r\n      rtt: connection.rtt\r\n    };\r\n  }\r\n  return null;\r\n}; "],"names":["module","main","global","isWorker","workerSize","canUseWorker","Worker","Blob","Promise","OffscreenCanvas","OffscreenCanvasRenderingContext2D","HTMLCanvasElement","prototype","transferControlToOffscreen","URL","createObjectURL","canUsePaths","Path2D","DOMMatrix","canDrawBitmap","canvas","ctx","getContext","fillRect","bitmap","transferToImageBitmap","createPattern","e","noop","promise","func","ModulePromise","exports","Prom","skipTransform","map","defaultFire","bitmapMapper","Map","transform","has","get","width","height","drawImage","set","clear","raf","frame","cancel","TIME","Math","floor","frames","lastFrameTime","requestAnimationFrame","cancelAnimationFrame","cb","id","random","onFrame","time","setTimeout","timer","clearTimeout","getWorker","worker","prom","resolves","code","toString","join","undefined","console","warn","execute","options","callback","postMessage","init","offscreen","fire","size","done","slice","resolve","workerDone","msg","data","removeEventListener","addEventListener","bind","reset","decorate","defaults","particleCount","angle","spread","startVelocity","decay","gravity","drift","ticks","x","y","shapes","zIndex","colors","disableForReducedMotion","scalar","prop","name","val","convert","onlyPositiveInt","number","randomInt","min","max","toDecimal","str","parseInt","colorsToRgb","hexToRgb","String","replace","length","r","substring","g","b","setCanvasWindowSize","document","documentElement","clientWidth","clientHeight","setCanvasRectSize","rect","getBoundingClientRect","randomPhysics","opts","radAngle","PI","radSpread","wobble","wobbleSpeed","velocity","angle2D","tiltAngle","color","shape","tick","totalTicks","tiltSin","tiltCos","wobbleX","wobbleY","ovalScalar","flat","updateFetti","context","fetti","cos","sin","progress","x1","y1","x2","y2","fillStyle","beginPath","type","path","Array","isArray","matrix","fill","pathString","pathMatrix","scaleX","scaleY","rotation","path2d","t1","addPath","t2","transformPath2D","abs","multiplySelf","pattern","setTransform","globalAlpha","ellipse","radiusX","radiusY","startAngle","endAngle","antiClockwise","save","translate","rotate","scale","arc","restore","rot","innerRadius","outerRadius","spikes","step","lineTo","moveTo","closePath","confettiCannon","globalOpts","animationObj","isLibCanvas","allowResize","hasResizeEventRegistered","globalDisableForReducedMotion","Boolean","resizer","initialized","__confetti_initialized","preferLessMotion","matchMedia","matches","fireLocal","Number","origin","Object","getOrigin","temp","fettis","startX","startY","push","addFettis","animationFrame","destroy","animatingFettis","onDone","clearRect","update","filter","concat","animate","createElement","style","position","top","left","pointerEvents","getCanvas","body","appendChild","onResize","obj","resize","contains","removeChild","getDefaultFire","useWorker","apply","this","arguments","create","shapeFromPath","pathData","Error","tempCtx","maxSize","minX","minY","maxX","maxY","isPointInPath","round","shapeFromText","textData","text","fontFamily","fontSize","font","measureText","ceil","actualBoundingBoxRight","actualBoundingBoxLeft","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","window","self","JOKER_TYPES","JOKER_ICONS","eliminate","extraTime","doubleAnswer","autoCorrect","Quiz","_currentQuestion$opti","subTopic","testNumber","useParams","navigate","useNavigate","updateUserStats","user","updateUser","refreshUser","useAuth","measureAsync","recordMetric","usePerformanceMonitor","variant","uiVariant","config","uiConfig","trackEvent","trackUIEvent","useABTest","loadingVariant","loadingConfig","trackLoadingEvent","currentQuestionIndex","setCurrentQuestionIndex","useState","selectedAnswer","setSelectedAnswer","timeLeft","setTimeLeft","isAnswered","setIsAnswered","score","setScore","questions","setQuestions","isLoading","setIsLoading","error","setError","eliminatedOptions","setEliminatedOptions","selectedAnswers","setSelectedAnswers","isDoubleAnswerActive","setIsDoubleAnswerActive","showStats","setShowStats","quizDuration","setQuizDuration","earnedXp","setEarnedXp","earnedCoin","setEarnedCoin","showXpInfo","setShowXpInfo","jokerPurchaseLoading","setJokerPurchaseLoading","jokerPurchaseMessage","setJokerPurchaseMessage","timerRef","useRef","questionsCache","progressPercentage","useMemo","currentQuestion","useEffect","async","cacheKey","current","questionsRef","collection","db","q","query","where","querySnapshot","getDocs","empty","fetchedQuestions","docs","doc","cacheSize","count","err","fetchQuestions","then","process","jokers","jokersUsed","setInterval","prev","clearInterval","finishQuiz","formatTime","useCallback","seconds","padStart","handleAnswerSelect","answerIndex","includes","newSelected","correctAnswer","handleNextQuestion","finalScore","totalQuestions","mainTopic","location","pathname","split","subjectTopicKey","testId","percentage","completed","log","newTestResult","total","attempts","currentTestResults","testResults","currentTopicResults","_currentTopicResults$","updatedTopicResults","updatedTestResults","userRef","updateDoc","firestoreError","saveTestResult","xpResult","updateXpLevelRank","correct","gainedXp","handleRetry","handleGoBack","JOKER_PRICES","handleUseJoker","newJokers","newJokersUsed","jokerKullan","currentQ","shuffled","i","sort","_questions$currentQue","alert","message","confetti","_jsx","className","children","_jsxs","onClick","successRate","isSuccessful","maxWidth","margin","background","borderRadius","boxShadow","textAlign","minHeight","display","flexDirection","alignItems","justifyContent","animation","fontWeight","marginBottom","letterSpacing","border","_Fragment","marginRight","gap","minWidth","marginLeft","marginTop","flexWrap","cursor","v","transition","listStyle","backdropFilter","jokerCount","isDisabled","price","opacity","title","_user$jokers","_user$jokers$type","coins","currentCount","updates","increment","updatedUser","handleJokerPurchase","el","currentTarget","classList","add","remove","lineHeight","flex","question","option","index","disabled","fromCharCode","explanation","PerformanceMonitor","constructor","metrics","observers","initObservers","getInstance","instance","navigationObserver","PerformanceObserver","list","entry","getEntries","entryType","navEntry","loadEventEnd","loadEventStart","observe","entryTypes","paintObserver","startTime","value","getAverageMetric","values","reduce","sum","getMetrics","result","forEach","key","fn","start","performance","now","finally","duration","measureSync","reportMetrics","sendToAnalytics","gtag","entries","_ref","average","metric_name","metric_value","metric_count","observer","disconnect","monitor","getMemoryUsage","memory","usedJSHeapSize","totalJSHeapSize","jsHeapSizeLimit","getNetworkInfo","navigator","connection","effectiveType","downlink","rtt"],"sourceRoot":""}